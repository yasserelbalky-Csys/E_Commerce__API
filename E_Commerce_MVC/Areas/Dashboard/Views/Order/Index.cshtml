@using E_Commerce_MVC.Models.UtilitesSupport
@model PaginatedList<E_Commerce_MVC.Models.EntitiesViewModel.OrderViewModel>
@{
    ViewData["Title"] = "Orders";
}
<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Orders</h5>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>@Html.DisplayNameFor(model => model[0].OrderNo)</th>
                            <th>@Html.DisplayNameFor(model => model[0].UserName)</th>
                            <th>@Html.DisplayNameFor(model => model[0].OrderDate)</th>
                            <th>@Html.DisplayNameFor(model => model[0].Name)</th>
                            <th>@Html.DisplayNameFor(model => model[0].NetValue)</th>
                            <th>@Html.DisplayNameFor(Model => Model[0].OrderStatus)</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model) {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.OrderNo)</td>
                                <td>@Html.DisplayFor(modelItem => item.UserName)</td>
                                <td>@Html.DisplayFor(modelItem => item.OrderDate)</td>
                                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.NetValue)</td>
                                <td>@Html.DisplayFor(modelItem => item.OrderStatus)</td>
                                <td class="text-center">
                                    @if (User.IsInRole("Admin")) {
                                        <a class="btn btn-sm btn-warning me-1" href="@Url.Action("ConfirmOrder", new { id = item.OrderNo })">Confirm</a>
                                    }
                                    <a class="btn btn-sm btn-info me-1 text-white" href="@Url.Action("Details", new { id = item.OrderNo })">Details</a>
                                    @if (User.IsInRole("Admin")) {
                                        <a class="btn btn-sm btn-danger" href="@Url.Action("Delete", new { id = item.OrderNo })">Delete</a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <!-- Pagination Controls -->
                <div class="pagination-container mt-4">
                    <nav aria-label="Page navigation">
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-center">
                                <!-- Previous -->
                                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageIndex - 1 })">&laquo;</a>
                                </li>
                                <!-- Page Numbers -->
                                @for (int i = 1; i <= Model.TotalPages; i++) {
                                    if (i == Model.PageIndex) {
                                        <li class="page-item active">
                                            <span class="page-link">@i</span>
                                        </li>
                                    } else {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                                        </li>
                                    }
                                }
                                <!-- Next -->
                                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageIndex + 1 })">&raquo;</a>
                                </li>
                            </ul>
                        </nav>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>